{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-20 09:55:07",
        "@type": "post",
        "@filename": "b000000006.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001278680",
        "node": "000000006",
        "site": "1000110001",
        "pt": "2023-07-12 13:12:36",
        "poster": "06005635",
        "realname": "黃博元",
        "email": "maruko1mjw@yahoo.com.tw",
        "homepage": null,
        "subject": "搶答123",
        "content": "<p>題目 :&nbsp;寫C++程式碼說明如何複製一整個鏈結串列linked list到另一個變數。</p>\r\n\r\n<p>答案 :&nbsp;</p>\r\n\r\n<p>#include &lt;iostream&gt;</p>\r\n\r\n<p>using namespace std;</p>\r\n\r\n<p>// 鏈結串列的節點結構<br />\r\nstruct Node {<br />\r\n&nbsp; &nbsp; int data;<br />\r\n&nbsp; &nbsp; Node* next;<br />\r\n};</p>\r\n\r\n<p>// 複製鏈結串列函數<br />\r\nNode* cloneLinkedList(Node* head) {<br />\r\n&nbsp; &nbsp; if (head == nullptr) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return nullptr;<br />\r\n&nbsp; &nbsp; }</p>\r\n\r\n<p>&nbsp; &nbsp; // 創建新的鏈結串列頭節點<br />\r\n&nbsp; &nbsp; Node* newHead = new Node();<br />\r\n&nbsp; &nbsp; newHead-&gt;data = head-&gt;data;<br />\r\n&nbsp; &nbsp; newHead-&gt;next = nullptr;</p>\r\n\r\n<p>&nbsp; &nbsp; Node* currentNode = head-&gt;next;<br />\r\n&nbsp; &nbsp; Node* clonedCurrentNode = newHead;</p>\r\n\r\n<p>&nbsp; &nbsp; // 遍歷原始鏈結串列並複製每個節點<br />\r\n&nbsp; &nbsp; while (currentNode != nullptr) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Node* newNode = new Node();<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; newNode-&gt;data = currentNode-&gt;data;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; newNode-&gt;next = nullptr;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; clonedCurrentNode-&gt;next = newNode;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; currentNode = currentNode-&gt;next;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; clonedCurrentNode = clonedCurrentNode-&gt;next;<br />\r\n&nbsp; &nbsp; }</p>\r\n\r\n<p>&nbsp; &nbsp; return newHead;<br />\r\n}</p>\r\n\r\n<p>// 測試程式碼<br />\r\nint main() {<br />\r\n&nbsp; &nbsp; // 創建原始鏈結串列<br />\r\n&nbsp; &nbsp; Node* head = new Node();<br />\r\n&nbsp; &nbsp; head-&gt;data = 1;</p>\r\n\r\n<p>&nbsp; &nbsp; Node* node2 = new Node();<br />\r\n&nbsp; &nbsp; node2-&gt;data = 2;</p>\r\n\r\n<p>&nbsp; &nbsp; Node* node3 = new Node();<br />\r\n&nbsp; &nbsp; node3-&gt;data = 3;</p>\r\n\r\n<p>&nbsp; &nbsp; head-&gt;next = node2;<br />\r\n&nbsp; &nbsp; node2-&gt;next = node3;<br />\r\n&nbsp; &nbsp; node3-&gt;next = nullptr;</p>\r\n\r\n<p>&nbsp; &nbsp; // 複製鏈結串列<br />\r\n&nbsp; &nbsp; Node* clonedList = cloneLinkedList(head);</p>\r\n\r\n<p>&nbsp; &nbsp; // 輸出原始鏈結串列<br />\r\n&nbsp; &nbsp; cout &lt;&lt; &quot;原始鏈結串列: &quot;;<br />\r\n&nbsp; &nbsp; Node* currentNode = head;<br />\r\n&nbsp; &nbsp; while (currentNode != nullptr) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; currentNode-&gt;data &lt;&lt; &quot; &quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; currentNode = currentNode-&gt;next;<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; cout &lt;&lt; endl;</p>\r\n\r\n<p>&nbsp; &nbsp; // 輸出複製的鏈結串列<br />\r\n&nbsp; &nbsp; cout &lt;&lt; &quot;複製的鏈結串列: &quot;;<br />\r\n&nbsp; &nbsp; currentNode = clonedList;<br />\r\n&nbsp; &nbsp; while (currentNode != nullptr) {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; cout &lt;&lt; currentNode-&gt;data &lt;&lt; &quot; &quot;;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; currentNode = currentNode-&gt;next;<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; cout &lt;&lt; endl;</p>\r\n\r\n<p>&nbsp; &nbsp; return 0;<br />\r\n}</p>\r\n\r\n<p>執行結果</p>\r\n\r\n<p><img alt=\"\" src=\"/user/0/6/06005635/images/%E6%90%B6%E7%AD%94123.png\" style=\"height:183px; width:1004px\" /></p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "25",
        "lang": "1"
    }
}