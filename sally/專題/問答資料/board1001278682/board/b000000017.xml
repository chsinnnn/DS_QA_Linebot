<?xml version="1.0"?>
<data version="3.0" time="2024-07-20 09:55:20" type="post" filename="b000000017.xml">
  <open_time>0000-00-00</open_time>
  <close_time>0000-00-00</close_time>
  <lang_name>Big5</lang_name>
  <board_id>1001278682</board_id>
  <node>000000017</node>
  <site>1000110001</site>
  <pt>2023-07-21 17:42:53</pt>
  <poster>06005836</poster>
  <realname>&#x9673;&#x4E88;&#x7487;  </realname>
  <email>jason40125520@gmail.com</email>
  <homepage>  </homepage>
  <subject>&#x6436;&#x7B54;204 </subject>
  <content>&lt;p&gt;&lt;strong&gt;&#x8209;&#x4F8B;&#x8AAA;&#x660E;&#x591A;&#x91CD;&#x4F47;&#x5217;&#x5982;&#x4F55;&#x6A21;&#x64EC;&#xFF0C;&#x9700;&#x6307;&#x51FA;&#x9078;&#x64C7;&#x4F47;&#x5217;&#x7684;&#x7B56;&#x7565;&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&#x591A;&#x91CD;&#x4F47;&#x5217;&#xFF08;Multiple Queues&#xFF09;&#x6A21;&#x64EC;&#x662F;&#x4E00;&#x7A2E;&#x6A21;&#x64EC;&#x7CFB;&#x7D71;&#x4E2D;&#x540C;&#x6642;&#x5B58;&#x5728;&#x591A;&#x500B;&#x7368;&#x7ACB;&#x4F47;&#x5217;&#x7684;&#x60C5;&#x6CC1;&#x3002;&#x9019;&#x985E;&#x6A21;&#x64EC;&#x5E38;&#x898B;&#x65BC;&#x4E00;&#x500B;&#x670D;&#x52D9;&#x53F0;&#xFF08;&#x4F8B;&#x5982;&#x91AB;&#x9662;&#x3001;&#x8D85;&#x5E02;&#xFF09;&#x5177;&#x6709;&#x591A;&#x500B;&#x4E0D;&#x540C;&#x985E;&#x578B;&#x7684;&#x670D;&#x52D9;&#x9700;&#x6C42;&#xFF0C;&#x6216;&#x6709;&#x591A;&#x500B;&#x4E0D;&#x540C;&#x512A;&#x5148;&#x7D1A;&#x7684;&#x9867;&#x5BA2;&#x3002;&#x5728;&#x591A;&#x91CD;&#x4F47;&#x5217;&#x6A21;&#x64EC;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x9078;&#x64C7;&#x4F47;&#x5217;&#x7684;&#x7B56;&#x7565;&#xFF0C;&#x6C7A;&#x5B9A;&#x6BCF;&#x500B;&#x65B0;&#x5230;&#x9054;&#x7684;&#x9867;&#x5BA2;&#x61C9;&#x8A72;&#x52A0;&#x5165;&#x54EA;&#x500B;&#x4F47;&#x5217;&#xFF0C;&#x7136;&#x5F8C;&#x6A21;&#x64EC;&#x591A;&#x500B;&#x4F47;&#x5217;&#x7684;&#x670D;&#x52D9;&#x904E;&#x7A0B;&#x3002;&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&#x4EE5;&#x4E0B;&#x662F;&#x4E00;&#x500B;&#x7C21;&#x5316;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x5C55;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x6A21;&#x64EC;&#x591A;&#x91CD;&#x4F47;&#x5217;&#xFF0C;&#x4E26;&#x4F7F;&#x7528;&#x300C;&#x6700;&#x77ED;&#x4F47;&#x5217;&#x512A;&#x5148;&#x300D;&#xFF08;Shortest Queue First&#xFF09;&#x7B56;&#x7565;&#x4F86;&#x9078;&#x64C7;&#x4F47;&#x5217;&#xFF1A;&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&#x5047;&#x8A2D;&#x6B63;&#x5728;&#x6A21;&#x64EC;&#x4E00;&#x5BB6;&#x8D85;&#x5E02;&#xFF0C;&#x8D85;&#x5E02;&#x6709;&#x5169;&#x500B;&#x6536;&#x9280;&#x6AC3;&#x53F0;&#xFF1A;&#x4E00;&#x500B;&#x7528;&#x65BC;&#x666E;&#x901A;&#x9867;&#x5BA2;&#xFF0C;&#x53E6;&#x4E00;&#x500B;&#x7528;&#x65BC;&#x5FEB;&#x901F;&#x6536;&#x9280;&#xFF08;VIP&#xFF09;&#x9867;&#x5BA2;&#x3002;&#x7576;&#x9867;&#x5BA2;&#x5230;&#x9054;&#x8D85;&#x5E02;&#x6642;&#xFF0C;&#x6211;&#x5011;&#x9078;&#x64C7;&#x52A0;&#x5165;&#x9577;&#x5EA6;&#x8F03;&#x77ED;&#x7684;&#x4F47;&#x5217;&#xFF0C;&#x4EE5;&#x4FBF;&#x4ED6;&#x5011;&#x80FD;&#x5920;&#x66F4;&#x5FEB;&#x5730;&#x63A5;&#x53D7;&#x670D;&#x52D9;&#x3002;&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;import random&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;def simulate_multiple_queues(simulation_time, inter_arrival_time_mean, service_time_mean):&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;queue_normal = []&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;queue_vip = []&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;current_time = 0&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;total_waiting_time_normal = 0&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;total_waiting_time_vip = 0&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;num_customers_served_normal = 0&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;num_customers_served_vip = 0&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while current_time &amp;lt; simulation_time:&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# Determine which queue to join (shortest queue first strategy)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if len(queue_normal) &amp;lt;= len(queue_vip):&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;queue = queue_normal&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else:&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;queue = queue_vip&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if not queue:&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# If the queue is empty, set the next arrival time&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;next_arrival_time = random.expovariate(1 / inter_arrival_time_mean)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;current_time += next_arrival_time&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;queue.append(current_time)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else:&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# If the queue is not empty, process the next customer&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;next_service_time = random.expovariate(1 / service_time_mean)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;current_time += next_service_time&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# Calculate waiting time for the current customer&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;waiting_time = current_time - queue[0]&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if queue is queue_vip:&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;total_waiting_time_vip += waiting_time&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;num_customers_served_vip += 1&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else:&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;total_waiting_time_normal += waiting_time&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;num_customers_served_normal += 1&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;queue.pop(0)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;average_waiting_time_normal = total_waiting_time_normal / num_customers_served_normal&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;average_waiting_time_vip = total_waiting_time_vip / num_customers_served_vip&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return average_waiting_time_normal, average_waiting_time_vip&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;# Example usage:&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;simulation_time = 10000&amp;nbsp; # Total simulation time&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;inter_arrival_time_mean = 5.0&amp;nbsp; # Mean time between customer arrivals&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;service_time_mean = 4.0&amp;nbsp; # Mean service time&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;normal_waiting_time, vip_waiting_time = simulate_multiple_queues(simulation_time, inter_arrival_time_mean, service_time_mean)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;print(&amp;quot;Average Waiting Time (Normal Queue):&amp;quot;, normal_waiting_time)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;print(&amp;quot;Average Waiting Time (VIP Queue):&amp;quot;, vip_waiting_time)&lt;/strong&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&lt;strong&gt;&#x5728;&#x9019;&#x500B;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x6211;&#x5011;&#x4F7F;&#x7528;&#x4E86;&#x4E00;&#x500B;&#x7C21;&#x55AE;&#x7684;&#x7B56;&#x7565;&#x4F86;&#x9078;&#x64C7;&#x4F47;&#x5217;&#xFF1A;&#x9577;&#x5EA6;&#x8F03;&#x77ED;&#x7684;&#x4F47;&#x5217;&#x512A;&#x5148;&#x3002;&#x7576;&#x65B0;&#x7684;&#x9867;&#x5BA2;&#x5230;&#x9054;&#x6642;&#xFF0C;&#x6211;&#x5011;&#x6BD4;&#x8F03;&#x5169;&#x500B;&#x4F47;&#x5217;&#x7684;&#x9577;&#x5EA6;&#xFF0C;&#x7136;&#x5F8C;&#x5C07;&#x9867;&#x5BA2;&#x52A0;&#x5165;&#x9577;&#x5EA6;&#x8F03;&#x77ED;&#x7684;&#x4F47;&#x5217;&#x3002;&#x9019;&#x6A23;&#xFF0C;&#x8F03;&#x77ED;&#x7684;&#x4F47;&#x5217;&#x5C07;&#x6703;&#x66F4;&#x5FEB;&#x5730;&#x8655;&#x7406;&#x5B8C;&#x9867;&#x5BA2;&#xFF0C;&#x907F;&#x514D;&#x9577;&#x6642;&#x9593;&#x7B49;&#x5F85;&#x3002;&lt;/strong&gt;&lt;/p&gt; </content>
  <attach></attach>
  <rcount></rcount>
  <rank></rank>
  <hit>10</hit>
  <lang>1</lang>
</data>
