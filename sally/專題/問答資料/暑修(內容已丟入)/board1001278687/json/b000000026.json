{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-20 09:55:52",
        "@type": "post",
        "@filename": "b000000026.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001278687",
        "node": "000000026",
        "site": "1000110001",
        "pt": "2023-07-25 22:46:55",
        "poster": "06005914",
        "realname": "陳彥中",
        "email": "jackson89911@gmail.com",
        "homepage": null,
        "subject": "搶答221",
        "content": "<p>221. 舉例解說中序走訪二元搜尋樹是否穩定排序。</p>\r\n\r\n<p>A:在二元搜尋樹(Binary Search&nbsp;Tree)中，有幾個特點，例如:</p>\r\n\r\n<p>1.若任意節點的左子樹不是空的，則左子樹上所有節點的值均小於它的根節點的值</p>\r\n\r\n<p>2.若任意節點的右子樹不是空的，則右子樹上所有節點的值均大於它的根節點的值</p>\r\n\r\n<p>以下為Binary Search&nbsp;Tree的例子，均符合上述兩點</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; 5<br />\r\n&nbsp; &nbsp; &nbsp;/ \\<br />\r\n&nbsp; &nbsp; 3 &nbsp; 7<br />\r\n&nbsp; &nbsp;/ \\ / \\<br />\r\n&nbsp; 2 &nbsp;4 6 &nbsp;8</p>\r\n\r\n<p>對其進行中序走訪，先從左子節點到根結點再到右子節點，得到[2,3,4,5,6,7,8]，此排序後的順序相對位置不變，說明了中序走訪二元搜尋樹是穩定排序。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "8",
        "lang": "1"
    }
}