<?xml version="1.0"?>
<data version="3.0" time="2024-07-20 09:55:52" type="post" filename="b000000022.xml">
  <open_time>0000-00-00</open_time>
  <close_time>0000-00-00</close_time>
  <lang_name>Big5</lang_name>
  <board_id>1001278687</board_id>
  <node>000000022</node>
  <site>1000110001</site>
  <pt>2023-07-25 22:14:25</pt>
  <poster>06005952</poster>
  <realname>&#x59DA;&#x627F;&#x5FD7;  </realname>
  <email>ge062851@gmail.com</email>
  <homepage>  </homepage>
  <subject>&#x6436;&#x7B54;222 </subject>
  <content>&lt;p&gt;&lt;span style="font-size:14px"&gt;222. &#x64B0;&#x5BEB;&#x7A0B;&#x5F0F;&#x78BC;&#x6307;&#x51FA;&#x5982;&#x4F55;&#x70BA;&#x4E8C;&#x5143;&#x641C;&#x5C0B;&#x6A39;&#x65B0;&#x589E;&#x7BC0;&#x9EDE;&#x3002;&lt;/span&gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;BST_Node* InsertNode(BST_Node* root, int val)&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
&amp;nbsp;BST_Node* newnode;&lt;br /&gt;&#xD;
&amp;nbsp;BST_Node* current;&lt;br /&gt;&#xD;
&amp;nbsp;BST_Node* parent;&lt;br /&gt;&#xD;
&amp;nbsp;&lt;br /&gt;&#xD;
&amp;nbsp;newnode = (BST_Node*)malloc(sizeof(BST_Node));&lt;br /&gt;&#xD;
&amp;nbsp;newnode-&amp;gt;data = val;&lt;br /&gt;&#xD;
&amp;nbsp;newnode-&amp;gt;left = NULL;&lt;br /&gt;&#xD;
&amp;nbsp;newnode-&amp;gt;right = NULL;&lt;br /&gt;&#xD;
&amp;nbsp;if (root==NULL){&lt;br /&gt;&#xD;
&amp;nbsp; return newnode;/*&#x82E5;&#x70BA;&#x7A7A;&#xFF0C;&#x5247;&#x56DE;&#x50B3;newnode&#x7576;&#x4F5C;Binary Search Tree&#x7684;root*/&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&amp;nbsp;else&lt;br /&gt;&#xD;
{&lt;br /&gt;&#xD;
&amp;nbsp; current = root;&lt;br /&gt;&#xD;
&amp;nbsp; while(current!=NULL){/*&#x85C9;&#x7531;&#x5224;&#x65B7;val&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5C07;current&#x79FB;&#x52D5;&#x5230;&#x9069;&#x7576;&#x7684;&#x4F4D;&#x7F6E;*/&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp;parent = current;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp;if (current-&amp;gt;data&amp;gt;val){&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; current = current-&amp;gt;left;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp;else{&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; current = current-&amp;gt;right;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&#xD;
&amp;nbsp; }&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/*while()&#x8FF4;&#x5708;&#x7D50;&#x675F;&#x5F8C;&#xFF0C;parent&#x662F;&#x5728;leaf&#x7684;&#x4F4D;&#x7F6E;*/&lt;br /&gt;&#xD;
&amp;nbsp; if (parent-&amp;gt;data&amp;gt;val){&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp;parent-&amp;gt;left = newnode;/*&#x82E5;val&#x503C;&#x8F03;&#x5C0F;&#xFF0C;&#x5247;&#x5C07;newnode&#x63A5;&#x5728;parent&#x7684;&#x5DE6;&#x5B50;&#x9EDE;*/&lt;br /&gt;&#xD;
&amp;nbsp; }&lt;br /&gt;&#xD;
&amp;nbsp; else{&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp;parent-&amp;gt;right = newnode;/*&#x82E5;val&#x503C;&#x8F03;&#x5927;&#xFF0C;&#x5247;&#x5C07;newnode&#x63A5;&#x5728;parent&#x7684;&#x53F3;&#x5B50;&#x9EDE;*/&lt;br /&gt;&#xD;
&amp;nbsp; }&lt;br /&gt;&#xD;
&amp;nbsp;}&lt;br /&gt;&#xD;
&amp;nbsp;return root;&lt;br /&gt;&#xD;
}&lt;/p&gt; </content>
  <attach></attach>
  <rcount></rcount>
  <rank></rank>
  <hit>11</hit>
  <lang>1</lang>
</data>
