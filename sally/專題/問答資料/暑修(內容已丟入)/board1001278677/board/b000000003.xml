<?xml version="1.0"?>
<data version="3.0" time="2024-07-20 09:54:46" type="post" filename="b000000003.xml">
  <open_time>0000-00-00</open_time>
  <close_time>0000-00-00</close_time>
  <lang_name>Big5</lang_name>
  <board_id>1001278677</board_id>
  <node>000000003</node>
  <site>1000110001</site>
  <pt>2023-07-05 12:05:00</pt>
  <poster>10827128</poster>
  <realname>&#x6797;&#x946B;&#x5B8F;  </realname>
  <email>shawn140802@gmail.com</email>
  <homepage>  </homepage>
  <subject>&#x6436;&#x7B54;107 </subject>
  <content>&lt;p&gt;107. &#x82E5;&#x905E;&#x8FF4;&#x5230;&#x67D0;&#x5C64;&#x5C31;&#x7570;&#x5E38;&#x7D42;&#x6B62;&#xFF0C;&#x8981;&#x5982;&#x4F55;&#x5F37;&#x5236;&#x5B83;&#x7E7C;&#x7E8C;&#x57F7;&#x884C;&#x5230;&#x4E0B;&#x4E00;&#x5C64;&#xFF1F;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x53EF;&#x4EE5;&#x5728;&#x905E;&#x8FF4;&#x51FD;&#x5F0F;&#x4E2D;&#x7528;&#x4E0B;&#x5217;&#x7C21;&#x5316;&#x7684;&#x7BC4;&#x4F8B;&#x5B8C;&#x6210;:&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;void recursiveFunction(int step) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; try {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // &#x53EF;&#x80FD;&#x5F15;&#x53D1;&#x5F02;&#x5E38;&#x7684;&#x4EE3;&#x7801;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw MyException(&amp;quot;error message&amp;quot;); &amp;nbsp;// &#x629B;&#x51FA;&#x5F02;&#x5E38;&#x5BF9;&#x8C61;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; recursiveFunction(step + 1);&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; } catch (const MyException&amp;amp; e) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // &#x6355;&#x83B7;&#x5E76;&#x5904;&#x7406;&#x5F02;&#x5E38;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::cerr &amp;lt;&amp;lt; &amp;quot;&#x6355;&#x83B7;&#x5230;&#x5F02;&#x5E38;&#xFF1A;&amp;quot; &amp;lt;&amp;lt; e.what() &amp;lt;&amp;lt; std::endl;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; recursiveFunction(step + 1);&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; } catch (const std::exception&amp;amp; e) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // &#x6355;&#x83B7;&#x5E76;&#x5904;&#x7406;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684;&#x5F02;&#x5E38;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::cerr &amp;lt;&amp;lt; &amp;quot;&#x6355;&#x83B7;&#x5230;&#x5F02;&#x5E38;&#xFF1A;&amp;quot; &amp;lt;&amp;lt; e.what() &amp;lt;&amp;lt; std::endl;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; recursiveFunction(step + 1);&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; } catch (...) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // &#x6355;&#x83B7;&#x5E76;&#x5904;&#x7406;&#x6240;&#x6709;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x7684;&#x5F02;&#x5E38;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std::cerr &amp;lt;&amp;lt; &amp;quot;&#x6355;&#x83B7;&#x5230;&#x672A;&#x77E5;&#x5F02;&#x5E38;&amp;quot; &amp;lt;&amp;lt; std::endl;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; recursiveFunction(step + 1);&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&#xD;
}&lt;br /&gt;&#xD;
&amp;nbsp;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x82E5;&#x5728;&#x67D0;&#x5C64;&#x6355;&#x6349;&#x5230;&#x932F;&#x8AA4;&#xFF0C;&#x4E5F;&#x80FD;&#x901A;&#x904E;&#x6B64;&#x985E;&#x8655;&#x7406;&#x7570;&#x5E38;&#x7684;&#x8A9E;&#x6CD5;&#x76F4;&#x63A5;&#x9032;&#x5230;&#x4E0B;&#x4E00;&#x6B21;&#x905E;&#x8FF4;&#x3002;&lt;/p&gt; </content>
  <attach></attach>
  <rcount></rcount>
  <rank></rank>
  <hit>13</hit>
  <lang>1</lang>
</data>
