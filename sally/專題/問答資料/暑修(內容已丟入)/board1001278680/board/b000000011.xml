<?xml version="1.0"?>
<data version="3.0" time="2024-07-20 09:55:07" type="post" filename="b000000011.xml">
  <open_time>0000-00-00</open_time>
  <close_time>0000-00-00</close_time>
  <lang_name>Big5</lang_name>
  <board_id>1001278680</board_id>
  <node>000000011</node>
  <site>1000110001</site>
  <pt>2023-07-13 02:50:51</pt>
  <poster>06005636</poster>
  <realname>&#x6731;&#x7D18;&#x6B63;  </realname>
  <email>henry3446@gmail.com</email>
  <homepage>  </homepage>
  <subject>&#x6436;&#x7B54;123 </subject>
  <content>&lt;p&gt;123. &#x5BEB;C++&#x7A0B;&#x5F0F;&#x78BC;&#x8AAA;&#x660E;&#x5982;&#x4F55;&#x8907;&#x88FD;&#x4E00;&#x6574;&#x500B;&#x93C8;&#x7D50;&#x4E32;&#x5217;linked list&#x5230;&#x53E6;&#x4E00;&#x500B;&#x8B8A;&#x6578;&#x3002;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;#include &amp;lt;iostream&amp;gt;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;struct Node {&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; int data;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; Node* next;&lt;br /&gt;&#xD;
};&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;Node* copyLinkedList(Node* head) {&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; if (head == nullptr) {&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return nullptr;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Node* newHead = new Node();&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; newHead-&amp;gt;data = head-&amp;gt;data;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; newHead-&amp;gt;next = copyLinkedList(head-&amp;gt;next);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return newHead;&lt;br /&gt;&#xD;
}&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;void printLinkedList(Node* head) {&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; while (head != nullptr) {&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::cout &amp;lt;&amp;lt; head-&amp;gt;data &amp;lt;&amp;lt; &amp;quot; &amp;quot;;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; head = head-&amp;gt;next;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::cout &amp;lt;&amp;lt; std::endl;&lt;br /&gt;&#xD;
}&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;int main() {&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; Node* head = new Node{1, nullptr};&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; Node* secondNode = new Node{2, nullptr};&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; Node* thirdNode = new Node{3, nullptr};&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; head-&amp;gt;next = secondNode;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; secondNode-&amp;gt;next = thirdNode;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Node* copiedList = copyLinkedList(head);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::cout &amp;lt;&amp;lt; &amp;quot;&#x539F;&#x672C;&#x93C8;&#x7D50;&#x4E32;&#x5217;&#xFF1A;&amp;quot;;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; printLinkedList(head);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; std::cout &amp;lt;&amp;lt; &amp;quot;&#x8907;&#x88FD;&#x93C8;&#x7D50;&#x4E32;&#x5217;&#xFF1A;&amp;quot;;&lt;br /&gt;&#xD;
&amp;nbsp;&amp;nbsp;&amp;nbsp; printLinkedList(copiedList);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return 0;&lt;br /&gt;&#xD;
}&lt;/p&gt; </content>
  <attach></attach>
  <rcount></rcount>
  <rank></rank>
  <hit>29</hit>
  <lang>1</lang>
</data>
