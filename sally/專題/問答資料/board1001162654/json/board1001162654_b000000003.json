{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 09:05:55",
        "@type": "post",
        "@filename": "b000000003.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001162654",
        "node": "000000003",
        "site": "1000110001",
        "pt": "2022-12-13 22:19:15",
        "poster": "10527234",
        "realname": "廖彥晴",
        "email": "ingrid.liao@hotmail.com",
        "homepage": null,
        "subject": "215. 舉例說明快速排序的遞迴深度會受何者影響",
        "content": "<p>快速排序的執行時間跟如何挑選基準有很大的關係。</p>\r\n\r\n<p>首先，無論怎麼挑選基準，每一層遞迴都會處理陣列裡的所有元素，所以每次增加執行堆疊都會經過n次操作，這部份時間為O(n)。因此，執行堆疊越少，則整體執行時間越短。</p>\r\n\r\n<p>也就是說，最壞的情況就是執行堆疊最高的情況。如果每次的基準都是陣列中最大或最小的數字，分割時就會所有元素都被分在同一邊，等於每次的子陣列只比原本少一個元素，那麼需要n-1層的遞迴才能完成排序。再乘以每層的操作時間，整個演算法的最壞情況執行時間為O(n&sup2;)。</p>\r\n\r\n<p>最佳的情況，則是每次的基準都將陣列分割成兩個差不多大小的子陣列，這樣就只需要log n層遞迴。整體執行時間可以縮短為O(n log n)。</p>\r\n\r\n<p>以陣列[1, 2, 3, 4, 5, 6, 7, 8]為例，如果以第一個數字作為基準，分割後會得到空陣列[]、[1]、[2, 3, 4, 5, 6, 7]，以此類推，要經過7層遞迴才能達到基本情況。但如果以4為基準，只要3層次的遞迴就可以達到基本情況。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "6",
        "lang": "1"
    }
}