<?xml version="1.0"?>
<data version="3.0" time="2024-07-19 08:49:45" type="post" filename="b000000005.xml">
  <open_time>0000-00-00</open_time>
  <close_time>0000-00-00</close_time>
  <lang_name>Big5</lang_name>
  <board_id>1001305433</board_id>
  <node>000000005</node>
  <site>1000110001</site>
  <pt>2023-10-06 08:05:36</pt>
  <poster>11127229</poster>
  <realname>&#x5ED6;&#x7FCA;&#x5D34;  </realname>
  <email>willy.liao921118@gmail.com</email>
  <homepage>  </homepage>
  <subject>119. &#x5BEB;C++&#x7A0B;&#x5F0F;&#x78BC;&#x8AAA;&#x660E;&#x522A;&#x9664;&#x93C8;&#x7D50;&#x4E32;&#x5217;linked list&#x7B2C;3&#x500B;&#x7BC0;&#x9EDE;&#x3002; </subject>
  <content>&lt;p&gt;# include &amp;lt;iostream&amp;gt;&lt;br /&gt;&#xD;
using namespace std ;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;struct Node {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; int data ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; Node * next ;&lt;br /&gt;&#xD;
};&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;void DeleteThirdNode( Node * &amp;amp;head ) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; Node * temp = head ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; temp = temp -&amp;gt; next ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; Node * toDelete = temp -&amp;gt; next ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; temp -&amp;gt; next = toDelete -&amp;gt; next ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; delete toDelete ;&lt;br /&gt;&#xD;
}&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;void PrintList( Node * head ) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; Node * temp = head ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; while ( temp != nullptr ) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cout &amp;lt;&amp;lt; temp -&amp;gt; data &amp;lt;&amp;lt; &amp;quot; -&amp;gt; &amp;quot; ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; temp = temp -&amp;gt; next ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; cout &amp;lt;&amp;lt; &amp;quot;nullptr&amp;quot; &amp;lt;&amp;lt; endl ;&lt;br /&gt;&#xD;
}&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;int main( ) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; Node * head = new Node{ 1, nullptr } ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; head -&amp;gt; next = new Node{ 2, nullptr } ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; head -&amp;gt; next -&amp;gt; next = new Node{ 3, nullptr } ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; head -&amp;gt; next -&amp;gt; next -&amp;gt; next = new Node{ 4, nullptr } ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; head -&amp;gt; next -&amp;gt; next -&amp;gt; next -&amp;gt; next = new Node{ 5, nullptr } ;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; cout &amp;lt;&amp;lt; &amp;quot;&#x521D;&#x59CB;&#x93C8;&#x7D50;&#x4E32;&#x5217;&#xFF1A;&amp;quot; &amp;lt;&amp;lt; endl ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; PrintList( head ) ;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; DeleteThirdNode( head ) ;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; cout &amp;lt;&amp;lt; &amp;quot;&#x522A;&#x9664;&#x7B2C;3&#x500B;&#x7BC0;&#x9EDE;&#xFF1A;&amp;quot; &amp;lt;&amp;lt; endl ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; PrintList( head ) ;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; while ( head != nullptr ) {&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Node * temp = head ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; head = head -&amp;gt; next ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; delete temp ;&lt;br /&gt;&#xD;
&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; return 0 ;&lt;br /&gt;&#xD;
}&lt;/p&gt; </content>
  <attach></attach>
  <rcount></rcount>
  <rank></rank>
  <hit>26</hit>
  <lang>1</lang>
</data>
