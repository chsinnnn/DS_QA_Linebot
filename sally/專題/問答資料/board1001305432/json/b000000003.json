{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:49:36",
        "@type": "post",
        "@filename": "b000000003.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001305432",
        "node": "000000003",
        "site": "1000110001",
        "pt": "2023-10-03 10:57:05",
        "poster": "11020126",
        "realname": "鄭祐昀",
        "email": "carry0987@gmail.com",
        "homepage": null,
        "subject": "114. 寫出C++程式碼說明同類別兩個方法如何實現多載overloading",
        "content": "<p>可以通過改變函數參數的數量，類型來實現函數多載(overloading)。</p>\r\n\r\n<p>以下是一個簡單的例子~</p>\r\n\r\n<p>---<br />\r\nclass MyClass {<br />\r\npublic:<br />\r\n&nbsp; // Method Overloading (Function Overloading) in C++<br />\r\n&nbsp; void display() {<br />\r\n&nbsp; &nbsp; std::cout &lt;&lt; &quot;Hello&quot;&lt;&lt; std::endl;<br />\r\n&nbsp; }</p>\r\n\r\n<p>&nbsp; void display(int x) {<br />\r\n&nbsp; &nbsp; std::cout &lt;&lt; &quot;Hello, your number is: &quot;&lt;&lt; x &lt;&lt; std::endl;<br />\r\n&nbsp; }<br />\r\n};</p>\r\n\r\n<p>int main() {<br />\r\n&nbsp; MyClass obj;</p>\r\n\r\n<p>&nbsp; // Call without parameters<br />\r\n&nbsp; obj.display();<br />\r\n&nbsp;&nbsp;<br />\r\n&nbsp; // Call with one integer parameter<br />\r\n&nbsp; obj.display(5);<br />\r\n&nbsp;&nbsp;<br />\r\n&nbsp; return 0;<br />\r\n}<br />\r\n---</p>\r\n\r\n<p>在上述程式碼中，我定義了兩個名為 `display` 的method，但是它們接受的參數不同。一個不接受任何參數，另一個接受一個integer參數。根據調用函數時提供的參數，適當的方法將被調用。這就是overload的基本概念w</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "18",
        "lang": "1"
    }
}