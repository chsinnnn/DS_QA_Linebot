{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:59:46",
        "@type": "post",
        "@filename": "b000000005.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001174275",
        "node": "000000005",
        "site": "1000110001",
        "pt": "2022-10-22 23:26:37",
        "poster": "11027206",
        "realname": "林育萱",
        "email": "cindylin911105@gmail.com",
        "homepage": null,
        "subject": "121. 舉例說明使用環狀鏈結串列Circularly linked list的情境。",
        "content": "<p>環狀鏈結串列Circularly linked list簡述:<br />\r\n&nbsp; 1. 最後一個節點的指標會指向第一個節點。<br />\r\n&nbsp; 2. 沒有任一個節點指向NULL，每個節點都有後一位。</p>\r\n\r\n<p>舉個簡單的例子，在團康遊戲中，大家很常會圍成一個圈，目的是為了讓每一個人都能玩到遊戲，並且還能玩好幾回合，這就很像環狀鏈結串列的概念，人就是串列中的節點，左右(前後)兩邊都有人(節點)，也就是說，串列像環狀一樣，不論從哪一個節點開始出發，繞一圈都會經過每一個節點。</p>\r\n\r\n<p>使用環狀串列:<br />\r\n&nbsp; 1. 在建立第一個節點的時候，第一個節點不是指向NULL，而是指向他自己。<br />\r\n&nbsp; 2. 在計算長度的時候，不是指向NULL停止，而是指向第一個時停止。(停止條件不一樣)</p>\r\n\r\n<p>環狀鏈結串列的<br />\r\n&nbsp; 優點: 想查詢全部資訊，任一節點都可以作為始點。<br />\r\n&nbsp; 缺點: 不能隨機讀取指定位置的資料，只能一個一個走到指定的位置才能讀取。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "35",
        "lang": "1"
    }
}