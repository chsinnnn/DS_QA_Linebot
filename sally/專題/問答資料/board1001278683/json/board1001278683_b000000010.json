{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-20 09:55:26",
        "@type": "post",
        "@filename": "b000000010.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001278683",
        "node": "000000010",
        "site": "1000110001",
        "pt": "2023-07-21 19:56:17",
        "poster": "10927250",
        "realname": "古宸宇",
        "email": "ku0905264478@gmail.com",
        "homepage": null,
        "subject": "搶答207",
        "content": "<p>207. 舉例解說選擇排序selection sort並非穩定stable的排序方法。</p>\r\n\r\n<p>那我再舉一個例子解釋</p>\r\n\r\n<p>原始列表：[(&#39;B&#39;, 2), (&#39;D&#39;, 1), (&#39;C&#39;, 2), (&#39;A&#39;, 1)]</p>\r\n\r\n<p>進行選擇排序：</p>\r\n\r\n<p>第一步：選擇最小的數值1，與第一個位置的元素交換。</p>\r\n\r\n<p>[(&#39;D&#39;, 1), (&#39;B&#39;, 2), (&#39;C&#39;, 2), (&#39;A&#39;, 1)]</p>\r\n\r\n<p>第二步：選擇第二小的數值1，與第二個位置的元素交換。</p>\r\n\r\n<p>[(&#39;D&#39;, 1), (&#39;A&#39;, 1), (&#39;C&#39;, 2), (&#39;B&#39;, 2)]</p>\r\n\r\n<p>第三步：選擇第三小的數值2，與第三個位置的元素交換。</p>\r\n\r\n<p>[(&#39;D&#39;, 1), (&#39;A&#39;, 1), (&#39;B&#39;, 2), (&#39;C&#39;, 2)]</p>\r\n\r\n<p>第四步：選擇最大的數值2，與最後一個位置的元素交換。</p>\r\n\r\n<p>[(&#39;D&#39;, 1), (&#39;A&#39;, 1), (&#39;B&#39;, 2), (&#39;C&#39;, 2)]</p>\r\n\r\n<p>現在來看看原始列表中的兩對相同數值元素：(2, &#39;B&#39;)和(2, &#39;C&#39;)。在排序後，這兩對相同數值元素的相對順序被改變了。在原始列表中，&#39;B&#39;在&#39; C&#39;之前，但在排序後，&#39;B&#39;在&#39;C&#39;之後。這說明了選擇排序是不穩定的排序方法。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "17",
        "lang": "1"
    }
}