<?xml version="1.0"?>
<data version="3.0" time="2024-06-30 08:54:28" type="post" filename="b000000007000000003.xml">
  <open_time>0000-00-00</open_time>
  <close_time>0000-00-00</close_time>
  <lang_name>Big5</lang_name>
  <board_id>1001296417</board_id>
  <node>000000007000000003</node>
  <site>1000110001</site>
  <pt>2023-09-19 03:24:50</pt>
  <poster>11127137</poster>
  <realname>&#x9EC3;&#x4E59;&#x5BB6;  </realname>
  <email>u810025@gmail.com</email>
  <homepage>https://ja-errorpro.cf </homepage>
  <subject>Re: 105  </subject>
  <content>&lt;p&gt;&#x5982;&#x679C;&#x771F;&#x7684;&#x6709;&#x9700;&#x8981;&#x7528;&#x5230;&#x8D85;&#x904E;long long&#x4E0A;&#x9650;&#x7684;&#x6578;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x7528;&#x9663;&#x5217;&#x5BE6;&#x4F5C;&#x5927;&#x6578;&#x904B;&#x7B97;&#x4E86;&#xFF0C;&#x901A;&#x5E38;&#x5728;C++&#x88E1;&#x505A;&#x5927;&#x6578;&#x904B;&#x7B97;&#x6703;&#x5305;&#x6210;&#x7D50;&#x69CB;&#x7136;&#x5F8C;&#x5B9A;&#x7FA9;&#x904B;&#x7B97;&#x5B50;&#xFF0C;&#x9019;&#x6A23;&#x4E4B;&#x5F8C;&#x5728;&#x5BEB;&#x5176;&#x4ED6;&#x7B97;&#x6CD5;&#x6703;&#x66F4;&#x65B9;&#x4FBF;&#x3002;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;```cpp&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;struct BigInteger {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; string num; // &#x9019;&#x88E1;&#x4F7F;&#x7528;&#x5B57;&#x4E32;&#x5B58;&#x5927;&#x6578;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; int sign;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; int size() { return num.size(); }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; BigInteger() {}&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; BigInteger RemoveLeadingZero(int nsign) { // &#x53BB;&#x6389;&#x524D;&#x5C0E;&#x96F6;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; sign = nsign;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; for (int i = num.size() - 1; i &amp;gt; 0 &amp;amp;&amp;amp; num[i] == &amp;#39;0&amp;#39;; i--) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; num.pop_back();&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; if (num.size() == 1 &amp;amp;&amp;amp; num[0] == &amp;#39;0&amp;#39;) { // 0 &#x7684;&#x7B26;&#x865F;&#x70BA;&#x6B63;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sign = 1;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; return *this;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; BigInteger operator=(string s) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; num = (s[0] == &amp;#39;-&amp;#39; ? s.substr(1) : s);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; reverse(num.begin(), num.end());&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; (*this).RemoveLeadingZero(s[0] == &amp;#39;-&amp;#39; ? -1 : 1);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; return *this;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; BigInteger(string s) { *this = s; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; BigInteger(long long x) { (*this) = to_string(x); }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; BigInteger operator=(long long x) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; (*this) = to_string(x);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; return *this;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;};&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;```&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x5728;&#x52A0;&#x6CD5;&#x904B;&#x7B97;&#x4E0A;&#xFF0C;&#x76F4;&#x63A5;&#x6A21;&#x64EC;&#x76F4;&#x5F0F;&#x52A0;&#x6CD5;&#x5C31;&#x597D;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;```cpp&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; BigInteger operator+(BigInteger y) { // &#x6A21;&#x64EC;&#x76F4;&#x5F0F;&#x52A0;&#x6CD5;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; if (sign != y.sign) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; return (*this) - (-y);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; BigInteger ans;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; ans.sign = sign;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; for (int i = 0, carry = 0; i &amp;lt; size() || i &amp;lt; y.size() || carry; i++) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (i &amp;lt; size()) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; carry += num[i] - &amp;#39;0&amp;#39;;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (i &amp;lt; y.size()) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; carry += y.num[i] - &amp;#39;0&amp;#39;;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ans.num += (carry % 10 + &amp;#39;0&amp;#39;);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; carry /= 10;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; &amp;nbsp; return ans.RemoveLeadingZero(sign);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&amp;nbsp; }&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;```&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x6E1B;&#x3001;&#x4E58;&#x3001;&#x9664;&#x3001;&#x6A21;(&#x53D6;&#x9918;)&#x7684;&#x904B;&#x7B97;&#x90FD;&#x985E;&#x4F3C;&#x3002;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x4F46;&#x76F4;&#x5F0F;&#x4E58;&#x6CD5;&#x662F;&#x6309;&#x4F4D;&#x8A08;&#x7B97;&#xFF0C;&#x8907;&#x96DC;&#x5EA6; &lt;img alt="O(N^2)" src="https://latex.codecogs.com/gif.latex?O%28N%5E2%29" /&gt;&#xFF0C;N&#x4EE3;&#x8868;&#x4F4D;&#x6578;&#xFF0C;&#x82E5;N&#x8D85;&#x904E;&#x4E00;&#x842C;&#xFF0C;&#x5247;&#x8981;&#x8003;&#x616E;&#x6539;&#x7528;Karatsuba&#x7B97;&#x6CD5;&#x6216;FFT(&#x5FEB;&#x901F;&#x5085;&#x7ACB;&#x8449;&#x8F49;&#x63DB;)&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x4EE5;Divide &amp;amp; Conquer &#x7406;&#x5FF5;&#x4F86;&#x63D0;&#x5347;&#x901F;&#x5EA6;&#xFF0C;&#x5426;&#x5247;&#x9019;&#x4E9B;&#x5929;&#x6587;&#x6578;&#x5B57;&#x5C31;&#x7B97;&#x5B58;&#x5F97;&#x4E0B;&#x4E5F;&#x7B97;&#x4E0D;&#x5B8C;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x800C;&#x9664;&#x6CD5;&#x53EF;&#x9078;&#x64C7;&#x7528;&#x4E8C;&#x5206;&#x6CD5;&#x6216;&#x725B;&#x9813;&#x6CD5;&#x903C;&#x8FD1;&#x5546;&#x8207;&#x9918;&#x6578;&#x4F86;&#x63D0;&#x5347;&#x901F;&#x5EA6;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x9664;&#x4E86;&#x7528;&#x5B57;&#x4E32;&#x5B58;&#x5927;&#x6578;&#x4EE5;&#x5916;&#xFF0C;&#x53E6;&#x4E00;&#x4F5C;&#x6CD5;&#x662F;&#x5C07;&#x5F88;&#x591A;&#x4F4D;&#x6578;&#x58D3;&#x5230;&#x540C;&#x4E00;&#x500B;&#x6578;&#x5B57;&#xFF0C;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x9019;&#x6A23;&#x505A;&#x7684;&#x597D;&#x8655;&#x662F;&#x53EF;&#x4EE5;&#x518D;&#x5B58;&#x591A;&#x4E00;&#x9EDE;&#x4F4D;&#x6578;&#xFF0C;&#x800C;&#x4E14;&#x53EF;&#x4EE5;&#x5BEB;&#x5F97;&#x66F4;&#x7CBE;&#x7C21;&#x3002;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x9644;&#x6A94;&#x70BA;&#x4F7F;&#x7528;&#x5B57;&#x4E32;&#xFF0C;&#x5BE6;&#x4F5C;&#x76F4;&#x5F0F;&#x52A0;&#x6CD5;&#x3001;&#x76F4;&#x5F0F;&#x6E1B;&#x6CD5;&#x3001;&#x76F4;&#x5F0F;&#x4E58;&#x6CD5;&#x3001;&#x76F4;&#x5F0F;&#x9664;&#x6CD5;&#x3001;Karatsuba&#x7B97;&#x6CD5;&#x7684;&#x5927;&#x6578;&#x904B;&#x7B97;&#x7A0B;&#x5F0F;&#x78BC;&lt;/p&gt;</content>
  <attach>105_11127137.cpp	WM6508a3fc9becd.cpp</attach>
  <rcount></rcount>
  <rank></rank>
  <hit>5</hit>
  <lang>1</lang>
</data>
