<?xml version="1.0"?>
<data version="3.0" time="2024-07-20 09:54:39" type="post" filename="b000000004.xml">
  <open_time>0000-00-00</open_time>
  <close_time>0000-00-00</close_time>
  <lang_name>Big5</lang_name>
  <board_id>1001278676</board_id>
  <node>000000004</node>
  <site>1000110001</site>
  <pt>2023-07-04 12:06:46</pt>
  <poster>06005636</poster>
  <realname>&#x6731;&#x7D18;&#x6B63;  </realname>
  <email>henry3446@gmail.com</email>
  <homepage> </homepage>
  <subject>&#x6436;&#x7B54;102 </subject>
  <content>&lt;p&gt;102. &#x8A66;&#x5BEB;&#x51FA;&#x4E00;&#x500B;&#x905E;&#x8FF4;&#x51FD;&#x6578;&#x627E;&#x51FA;&#x4E00;&#x7FA4;&#x6574;&#x6578;&#x7684;&#x4E2D;&#x4F4D;&#x6578;median&#x3002;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x5982;&#x679C;&#x672C;&#x8EAB;&#x6709;&#x6392;&#x5E8F;&#x597D;&#xFF0C;&#x76F4;&#x63A5;&#x5C0B;&#x627E;&#x5373;&#x53EF;&#xFF0C;&#x4F46;&#x5982;&#x679C;Arr&#x88E1;&#x70BA;&#x6392;&#x5E8F;&#xFF0C;&#x5247;&#x9700;&#x8981;&#x591A;&#x52A0;&#x6392;&#x5E8F;&#x6CD5;&#x5148;&#x5C07;Arr&#x6392;&#x5E8F;&#xFF0C;&#x6392;&#x5E8F;&#x53EF;&#x7528;Quick sort&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x6CD5;&#x4F86;&#x6392;&#x5E8F;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;//&#x672C;&#x905E;&#x8FF4;&#x662F;&#x5229;&#x7528; Divide and Conquer &#x4F86;&#x627E;&#x51FA;&#x4E2D;&#x4F4D;&#x6578;&#x3002;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;int findMedian(int arr[], int start, int end) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;if (start == end) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;return arr[start];&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;//&#x9663;&#x5217;&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x500B;&#x5143;&#x7D20;&#xFF0C;&#x76F4;&#x63A5;&#x7576;&#x4F5C;&#x4E2D;&#x4F4D;&#x6578;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;} else if (start + 1 == end) {&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;return (arr[start] + arr[end]) / 2; // &#x7576;&#x9663;&#x5217;&#x88E1;&#x6709;&#x5169;&#x500B;&#x6578;&#x6642;&#xFF0C;&#x5169;&#x500B;&#x6578;&#x6642;&#x7684;&#x5E73;&#x5747;&#x503C;&#x4F5C;&#x70BA;&#x5E73;&#x5747;&#x6578;&#x3002;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;}else { //&#x7576;&#x9663;&#x5217;&#x9577;&#x5EA6;&#x5927;&#x65BC;&#x4E8C;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;int mid = (start + end) / 2;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;int leftMedian = findMedian(arr, start, mid);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;int rightMedian = findMedian(arr, mid + 1, end);&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;// &#x8FD4;&#x56DE;&#x5DE6;&#x53F3;&#x4E2D;&#x4F4D;&#x6578;&#x7684;&#x5E73;&#x5747;&#x503C;&#x7576;&#x4F5C;&#x9663;&#x5217;&#x88E1;&#x6574;&#x500B;&#x6578;&#x7684;&#x4E2D;&#x4F4D;&#x6578;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;return (leftMedian + rightMedian) / 2;&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;}&lt;/p&gt;&#xD;
&#xD;
&lt;p&gt;}&lt;/p&gt;</content>
  <attach></attach>
  <rcount></rcount>
  <rank></rank>
  <hit>40</hit>
  <lang>1</lang>
</data>
