{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:53:45",
        "@type": "post",
        "@filename": "b000000009.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001296419",
        "node": "000000009",
        "site": "1000110001",
        "pt": "2023-10-10 08:18:08",
        "poster": "11127126",
        "realname": "黃柏寧",
        "email": "kevinqwer666@gmail.com",
        "homepage": null,
        "subject": "111",
        "content": "<p>題目: 111.寫出C++程式碼說明傳值呼叫call by value</p>\r\n\r\n<p>程式碼:</p>\r\n\r\n<p>#include &lt;iostream&gt;<br />\r\nusing namespace std;</p>\r\n\r\n<p>// 定義一個函數，接受一個整數參數（使用傳值呼叫）<br />\r\nvoid modifyValue(int x) {<br />\r\n&nbsp; &nbsp; x = x +&nbsp;3; // 在函數內部修改形式參數的值<br />\r\n&nbsp; &nbsp; cout &lt;&lt; &quot;modifyValue修改後的值: &quot; &lt;&lt; x &lt;&lt; endl;<br />\r\n}</p>\r\n\r\n<p>int main() {<br />\r\n&nbsp; &nbsp; int num = 1; //num的初始值為1</p>\r\n\r\n<p>&nbsp; &nbsp; cout &lt;&lt; &quot;原始值: &quot; &lt;&lt; num &lt;&lt; endl;<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; // 呼叫modifyValue函數，傳遞num的值<br />\r\n&nbsp; &nbsp; modifyValue(num);</p>\r\n\r\n<p>&nbsp; &nbsp; cout &lt;&lt; &quot;呼叫modifyValue後的值: &quot; &lt;&lt; num &lt;&lt; endl;<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; return 0;<br />\r\n}</p>\r\n\r\n<p>當我們呼叫modifyValue(num)時，我們實際上將num的值（即1）傳遞給了modifyValue函數。在modifyValue函數內部，我們將形式參數x的值（即1）加3，但這個更改僅影響函數內部的x，不會影響main函數中的num。因此，儘管在函數內部修改了x，但num的值仍然保持不變，最終輸出為：</p>\r\n\r\n<p>原始值: 1<br />\r\nmodifyValue修改後的值: 4<br />\r\n呼叫modifyValue後的值: 1</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "27",
        "lang": "1"
    }
}