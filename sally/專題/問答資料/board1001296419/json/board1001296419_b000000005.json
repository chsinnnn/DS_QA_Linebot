{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:53:45",
        "@type": "post",
        "@filename": "b000000005.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001296419",
        "node": "000000005",
        "site": "1000110001",
        "pt": "2023-10-06 16:02:04",
        "poster": "10924148",
        "realname": "陳黃揚",
        "email": "conary0917@gmail.com",
        "homepage": null,
        "subject": "111",
        "content": "<p>題目:</p>\r\n\r\n<p>111. 寫出C++程式碼說明傳值呼叫call by value。</p>\r\n\r\n<p>程式碼:</p>\r\n\r\n<p>#include&lt;iostream&gt;</p>\r\n\r\n<p>using namespace std;</p>\r\n\r\n<p>void callByValue( int numB ) {</p>\r\n\r\n<p>&nbsp; numB += 10;</p>\r\n\r\n<p>&nbsp; return;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>int main() {</p>\r\n\r\n<p>&nbsp; int numA = 0;</p>\r\n\r\n<p>&nbsp; cout &lt;&lt; numA &lt;&lt; endl;</p>\r\n\r\n<p>&nbsp; callByValue( numA );</p>\r\n\r\n<p>&nbsp; cout &lt;&lt; numA &lt;&lt; endl;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>說明:</p>\r\n\r\n<p>如上面的程式碼所示範，執行後會先印出一開始初始化的numA也就是0，經過call by value傳入函式中以numB接，接著將numB加上10後結束，再次在main中印出numA可以發現還是0。</p>\r\n\r\n<p>是因為call by value只是將傳入的參數複製一份一模一樣的數值，簡單來說numA及numB是兩個完全不同的變數，只是內容剛好相同而已。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "22",
        "lang": "1"
    }
}