{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:59:17",
        "@type": "post",
        "@filename": "b000000005.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001174272",
        "node": "000000005",
        "site": "1000110001",
        "pt": "2022-09-21 16:16:02",
        "poster": "10911101",
        "realname": "鄭皓元",
        "email": "xpoi5020@gmail.com",
        "homepage": null,
        "subject": "106. 遞迴呼叫為何會造成記憶體區段錯誤？",
        "content": "<p>在一個程式開始時或是一個線程建立時，<br />\r\n會事先占用一個固定大小(大小取決於編譯器設定)的記憶體空間用來存放呼叫堆疊。</p>\r\n\r\n<p>函數呼叫時，會把上一層的函數(呼叫此函數的函數)所使用的子堆疊基底位置放入上一層函數的子堆疊中，<br />\r\n以及放入函數呼叫結束後下一個執行指令的位置，<br />\r\n然後才會在呼叫堆疊上放入一個子堆疊(這個子堆疊是疊在上一層函數的子堆疊上面)<br />\r\n接著把靜態變數放入子堆疊中。<br />\r\n同時為了防止這個函數執行完後改變上一個函數呼叫前的暫存器數值，導致運算錯誤，<br />\r\n所以這個子堆疊也會放入會在這個函數用到的暫存器原本的數值，在函數執行完後再把它押出並放回原位，<br />\r\n所以此時的呼叫堆疊大概會長這樣(視編譯器而定，但大致上應該是長這樣)</p>\r\n\r\n<p><img alt=\"\" src=\"/user/1/0/10911101/images/%E5%A0%86%E7%96%8A.png\" style=\"height:721px; width:510px\" /></p>\r\n\r\n<p>在函數執行結束後，這個子堆疊才會從呼叫堆疊中押出。</p>\r\n\r\n<p>而在遞迴的時候，如果遞迴時不斷在呼叫堆疊上放入東西<br />\r\n導致最後呼叫堆疊沒有空間放入新的子堆疊時，便會導致下一個函數無法順利執行，<br />\r\n此時便會發生Stack Overflow.</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "74",
        "lang": "1"
    }
}