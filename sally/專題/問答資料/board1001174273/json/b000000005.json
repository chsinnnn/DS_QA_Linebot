{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:59:22",
        "@type": "post",
        "@filename": "b000000005.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001174273",
        "node": "000000005",
        "site": "1000110001",
        "pt": "2022-10-04 00:21:18",
        "poster": "11027217",
        "realname": "胡佑禎",
        "email": "jenny920622@gmail.com",
        "homepage": null,
        "subject": "111. 寫出C++程式碼說明傳值呼叫call by value。",
        "content": "<p>當function使用傳值呼叫( call by value )時</p>\r\n\r\n<p>即function 只會複製變數的值來做使用，不會影響儲存在原本記憶體中的變數數值</p>\r\n\r\n<p>( 有點像去借朋友課本影印，印完課本還是朋友的，對影本進行剪貼、筆記皆不會影響原來的課本&nbsp;)</p>\r\n\r\n<p>與之相反的call by reference則是將儲存變數的記憶體位置傳給function，使其可以直接對變數進行更動</p>\r\n\r\n<p>( 以上述舉例而言，就像直接在朋友課本上進行剪貼、筆記&nbsp;)</p>\r\n\r\n<p>#include&lt;iostream&gt;<br />\r\nusing namespace std;<br />\r\nvoid CallByValue( int n ) {<br />\r\n&nbsp;&nbsp; &nbsp;n += 1;<br />\r\n&nbsp;&nbsp; &nbsp;n *= 10;<br />\r\n} // CallByValue<br />\r\nvoid CallByReference( int &amp;n ){<br />\r\n&nbsp;&nbsp; &nbsp;n += 1;<br />\r\n&nbsp;&nbsp; &nbsp;n *= 10;<br />\r\n} // CallByReference<br />\r\nint main(){<br />\r\n&nbsp;&nbsp; &nbsp;int num = 1;<br />\r\n&nbsp;&nbsp; &nbsp;CallByValue(num);<br />\r\n&nbsp;&nbsp; &nbsp;cout &lt;&lt; &quot;CallByValue : &quot; &lt;&lt; num &lt;&lt; endl;<br />\r\n&nbsp;&nbsp; &nbsp;CallByReference(num);<br />\r\n&nbsp;&nbsp; &nbsp;cout &lt;&lt; &quot;CallByReference : &quot; &lt;&lt; num &lt;&lt; endl;<br />\r\n&nbsp;&nbsp; &nbsp;return 0;<br />\r\n} // main()</p>\r\n\r\n<p>以上程式碼在CallByValue時，輸出為1</p>\r\n\r\n<p>在CallByReference時，輸出為20</p>\r\n\r\n<p>兩種程式皆將變數進行相同運算</p>\r\n\r\n<p>可知當function call by value時 原變數值不會因function內的動作而改變</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "71",
        "lang": "1"
    }
}