{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-20 09:54:46",
        "@type": "post",
        "@filename": "b000000027.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001278677",
        "node": "000000027",
        "site": "1000110001",
        "pt": "2023-07-09 21:34:55",
        "poster": "06004870",
        "realname": "曾浚楷",
        "email": "kenneth61215@gmail.com",
        "homepage": null,
        "subject": "搶答109",
        "content": "<p>109. 靜態陣列和動態陣列有何差異？指出其優缺點。</p>\r\n\r\n<p>答:</p>\r\n\r\n<p>靜態陣列:</p>\r\n\r\n<p>優點: 存取快、不需要額外記憶體空間存取address、方便宣告</p>\r\n\r\n<p>缺點: 大小無法調整</p>\r\n\r\n<p>動態陣列:</p>\r\n\r\n<p>優點: 可依需求分配空間</p>\r\n\r\n<p>缺點: 存取速度較慢、需要額外記憶體空間存取 address、需要手動釋放記憶體以免造成memory leak</p>\r\n\r\n<p>靜態陣列是在編譯時就分配好記憶體空間，因此資料會存取在連續的記憶體空間內，不需要通過額外的記憶體來存取 address 並使用 address 間接存取在特定記憶體位置，只需要計算index，但其缺點也很明顯，因為在編譯時就已經分配好記憶體空間，所以可能導致占用不需要的記憶體空間或一開始分配的記憶體空間不足導致超出堆疊大小等問題。</p>\r\n\r\n<p>而動態陣列的特性則相反，是在運行時根據需求調整大小，即不會發生靜態陣列的浪費不需要空間或空間不夠存取等問題，但為了達成動態分配記憶體，分配的空間必然無法連續，所以需要通過額外的記憶體空間來存取 address ，並在存取時使用 address 來指定位置。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "6",
        "lang": "1"
    }
}