{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 09:01:04",
        "@type": "post",
        "@filename": "b000000002.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001174281",
        "node": "000000002",
        "site": "1000110001",
        "pt": "2022-12-27 12:43:03",
        "poster": "10928156",
        "realname": "蔡宜呈",
        "email": "EASONYCTSAI@GMAIL.COM",
        "homepage": null,
        "subject": "229. 舉例解說堆積排序heap sort是否穩定排序。",
        "content": "<p>Heap sort不是一個穩定的排序&nbsp;</p>\r\n\r\n<p>Heap sort 的機制是建立一個二元樹，然後反復從中提取最小的元素，直到最後。&nbsp;</p>\r\n\r\n<p>由於二元樹中不保留數值相同的元素的相對順序，所以當使用 Heap sort 對數列進行排列時，可能會重新排列數列裡的元素，而不一定是數組的原始順序。因此數值相同的元素可能會被重新排列，因此他們在排序後的列表中的相對順序可能會改變。&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;</p>\r\n\r\n<p>舉例來說&nbsp;</p>\r\n\r\n<p>&nbsp;4&nbsp;, 3a , 3b , 2 , 1&nbsp;</p>\r\n\r\n<p>3a=3b&nbsp;</p>\r\n\r\n<p>如果我們使用一個穩定的排序法ex. Merge sort對這個數列進行排序，得到的數列將保持具有原有的相對順序。&nbsp;</p>\r\n\r\n<p>例如:&nbsp;1&nbsp;, 2 , 3a , 3b , 4&nbsp;</p>\r\n\r\n<p>然而，如果我們使用 Heap sort 來對同一個數列進行排序，首先4被移除並放在最後一個位置上，然後3a被移除並放在倒數第二的位置上，3b放在第三的位置上，所以Heap sort排列後的數組得到的列表將不會保持數列原有的相對順序。&nbsp;</p>\r\n\r\n<p>例如:&nbsp;1&nbsp;,2, 3b, 3a, 4</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "25",
        "lang": "1"
    }
}