{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 09:06:10",
        "@type": "post",
        "@filename": "b000000001.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001162657",
        "node": "000000001",
        "site": "1000110001",
        "pt": "2022-12-20 14:17:37",
        "poster": "10721221",
        "realname": "蕭茜文",
        "email": "wen042118@icloud.com",
        "homepage": null,
        "subject": "225. 已排序資料如何建立一棵平衡的二元搜尋樹？",
        "content": "<p>我們需要在每一個節點多新增一個資訊，也就是節點的高度，透過節點的高度來得知子樹的高度，從而保持平衡。</p>\r\n\r\n<p>最簡單平衡樹的想法就是讓左子樹和右子樹高度一模一樣，但這件事情實際上是不可能的，會因為樹的節點個數是奇數還是偶數而導致我們無法實現這一件事情。</p>\r\n\r\n<p>我們定義AVL Tree為對於每一個左子節點的高度和右子節點的高度，兩者之間的差異必須在正負1之間。</p>\r\n\r\n<p>為了平衡需用到計算BF(平衡因子)及四種旋轉方式：LL、RR、LR、RL。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "19",
        "lang": "1"
    }
}