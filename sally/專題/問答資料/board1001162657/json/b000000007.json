{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 09:06:10",
        "@type": "post",
        "@filename": "b000000007.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001162657",
        "node": "000000007",
        "site": "1000110001",
        "pt": "2022-12-27 22:56:18",
        "poster": "11027143",
        "realname": "許拓宸",
        "email": "hnes0311@gmail.com",
        "homepage": null,
        "subject": "221. 舉例解說中序走訪二元搜尋樹是否穩定排序。",
        "content": "<p>首先，&#39;二元搜尋樹&quot;其實就是&quot;插入排序&quot;，差別在於二元搜尋樹在插入點是使用二元搜尋(binary search)，而插入排序則是使用線性搜尋(linear search)，因為插入排序是穩頂排序的一種，因此二元搜尋樹也是穩定排序。<br />\r\n<br />\r\n<img src=\"https://cdn.discordapp.com/attachments/606811480322473985/1057310398208032779/IMG_6786.jpg\" /></p>\r\n\r\n<p>如圖，因為比較是從有序序列的頭開始，也就是想要插入的元素和已經有序的最小者開始比起，如果比它大則直接插入在其後面，否則一直往後找直到找到它該插入的位置。如果碰見一個和插入元素相等的，那麼把想插入的元素直接放在相等元素的後面。所以，相等元素的前後順序沒有改變，從原無序序列出去的順序就是排好序後的順序，因此是穩定的。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "9",
        "lang": "1"
    }
}