{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:53:34",
        "@type": "post",
        "@filename": "b000000016.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001296418",
        "node": "000000016",
        "site": "1000110001",
        "pt": "2023-10-04 23:25:59",
        "poster": "11127122",
        "realname": "胡沛頎",
        "email": "123456789paige26@gmail.com",
        "homepage": null,
        "subject": "110",
        "content": "<p><span style=\"font-size:14.0000pt\"><span style=\"color:#333333\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">110. 作業一靜態陣列和動態陣列有何差異？指出其優缺點。</span></span></span></span></p>\r\n\r\n<p><strong><strong><span style=\"font-size:12.0000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">靜態配置</span></span></span></strong></strong><strong><strong><span style=\"font-size:12.0000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">:</span></span></span></strong></strong></p>\r\n\r\n<p><span style=\"font-size:11.0000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">優點</span> <span style=\"font-family:微軟正黑體\">--</span></span></span></p>\r\n\r\n<ol>\r\n\t<li><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">在程式編譯階段，就由編譯器分配好連續的記憶體空間，不佔用程式執行之後的</span><span style=\"font-family:微軟正黑體\">CPU資源。</span></span></span></li>\r\n\t<li><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">在執行階段時，若該變數於區域內使用完畢，則會由系統進行回收，釋放佔有的記憶體。</span></span></span></li>\r\n</ol>\r\n\r\n<p><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">&nbsp; &nbsp;</span></span></span></p>\r\n\r\n<p><span style=\"font-size:11.0000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">缺點</span> <span style=\"font-family:微軟正黑體\">--</span></span></span></p>\r\n\r\n<p><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">1.空間不可增大或縮小。</span></span></span></p>\r\n\r\n<p><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">2.沒有使用的空間會被浪費。</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><strong><strong><span style=\"font-size:12.0000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">動態配置</span><span style=\"font-family:微軟正黑體\">:</span></span></span></strong></strong></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:11.0000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">優點</span> <span style=\"font-family:微軟正黑體\">-- </span></span></span></p>\r\n\r\n<ol>\r\n\t<li style=\"text-align:justify\"><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">空間可以隨著程式執行增加或者減少。</span></span></span></li>\r\n\t<li style=\"text-align:justify\"><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">需要空間才跟系統要記憶體，所以可以減少空間浪費的現象。</span></span></span></li>\r\n</ol>\r\n\r\n<p style=\"text-align:justify\">&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:11.0000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">缺點</span> <span style=\"font-family:微軟正黑體\">--</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">1. 在程式執行的時候，才開始分配記憶體空間，占用程式執行之後的</span><span style=\"font-family:微軟正黑體\">CPU資源。</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">2. 須由編寫程式者思考配置方法，且記憶體空間不一定連續。</span></span></span></p>\r\n\r\n<p style=\"text-align:justify\"><span style=\"font-size:10.5000pt\"><span style=\"font-family:微軟正黑體\"><span style=\"font-family:微軟正黑體\">3. 即使在執行階段時，該變數於區域內使用完畢，系統也不會進行回收，需要編寫程式者編寫釋放空間的動作。若不釋放，其生命週期會持續到程式結束。</span></span></span></p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "15",
        "lang": "1"
    }
}