{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 09:05:09",
        "@type": "post",
        "@filename": "b000000009.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001162649",
        "node": "000000009",
        "site": "1000110001",
        "pt": "2022-10-12 11:02:42",
        "poster": "11027111",
        "realname": "顏邑岑",
        "email": "22692amy@gmail.com",
        "homepage": null,
        "subject": "120. 舉例說明使用雙向鏈結串列doubly linked list的情境",
        "content": "<p>當碰到約瑟夫環問題時就適合使用雙向鏈結串列來解決問題，約瑟夫環的玩法: 有N個人圍成環型，將每個人編號1至N，從編號1的人開始傳遞馬鈴薯。M次傳遞後，持有馬鈴薯的人退出遊戲，環縮小，接著遊戲從退出者的下一個人繼續進行遊戲，最終留下來的人獲勝。</p>\r\n\r\n<p>隨著傳遞次數的增加，運算時間的複雜度為O(m * n)。為了減少運算的複雜度，可以令傳遞次數小於當前人數的一半時就正向傳遞，當傳遞次數大於當前人數的一半時就反向傳遞。有辦法實現這個做法的就是doubly linked，因為它具有前向指標(prev)和後向指標(next)，可以在任意位置正向傳遞或反向傳遞。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "25",
        "lang": "1"
    }
}