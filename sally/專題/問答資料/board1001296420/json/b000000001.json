{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:53:54",
        "@type": "post",
        "@filename": "b000000001.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001296420",
        "node": "000000001",
        "site": "1000110001",
        "pt": "2023-10-06 04:19:50",
        "poster": "11120127",
        "realname": "陳宥任",
        "email": "laohouy@gmail.com",
        "homepage": null,
        "subject": "117",
        "content": "<p>寫C++程式碼說明傳址呼叫call by address。</p>\r\n\r\n<p>#include &lt;iostream&gt;</p>\r\n\r\n<p>using namespace std;</p>\r\n\r\n<p>// 函數接受一個整數address，通過address修改變數的值<br />\r\nvoid modifyValueByAddress(int&amp; ref) {<br />\r\n&nbsp; &nbsp; ref = ref * 2;<br />\r\n}</p>\r\n\r\n<p>int main() {<br />\r\n&nbsp; &nbsp; int x = 5;</p>\r\n\r\n<p>&nbsp; &nbsp; cout &lt;&lt; &quot;在函數調用之前：x = &quot; &lt;&lt; x &lt;&lt; endl;<br />\r\n&nbsp; &nbsp; modifyValueByAddress(x); // 傳遞變數 x 的address<br />\r\n&nbsp; &nbsp; cout &lt;&lt; &quot;在函數調用之後：x = &quot; &lt;&lt; x &lt;&lt; endl;</p>\r\n\r\n<p>&nbsp; &nbsp; return 0;<br />\r\n}<br />\r\n&nbsp;</p>\r\n\r\n<p>當這段程式碼運行後會獲得以下輸出:</p>\r\n\r\n<p>在函數調用之前：x = 5<br />\r\n在函數調用之後：x = 10</p>\r\n\r\n<p>可以發現x的值被成功改動了,原因是將整數 x 以call by address的方式傳遞給 modifyValueByAddress 函數，並通過ref 修改了 x 的值。事實上無論使用pointer或是call by address的方式，它們都能夠修改原始變數x的值，因為它們實際上是使用了x的地址或引用來進行操作。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "38",
        "lang": "1"
    }
}