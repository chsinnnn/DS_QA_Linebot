{
    "data": {
        "@version": "3.0",
        "@time": "2024-07-19 08:53:54",
        "@type": "post",
        "@filename": "b000000002.xml",
        "open_time": "0000-00-00",
        "close_time": "0000-00-00",
        "lang_name": "Big5",
        "board_id": "1001296420",
        "node": "000000002",
        "site": "1000110001",
        "pt": "2023-10-06 16:07:41",
        "poster": "10924148",
        "realname": "陳黃揚",
        "email": "conary0917@gmail.com",
        "homepage": null,
        "subject": "117",
        "content": "<p>題目:</p>\r\n\r\n<p>117. 寫C++程式碼說明傳址呼叫call by address。</p>\r\n\r\n<p>程式碼:</p>\r\n\r\n<p>#include&lt;iostream&gt;</p>\r\n\r\n<p>using namespace std;</p>\r\n\r\n<p>void callByAddress( int &amp;numB ) {</p>\r\n\r\n<p>&nbsp; numB += 10;</p>\r\n\r\n<p>&nbsp; return;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>int main() {</p>\r\n\r\n<p>&nbsp; int numA = 0;</p>\r\n\r\n<p>&nbsp; cout &lt;&lt; numA &lt;&lt; endl;</p>\r\n\r\n<p>&nbsp; callByAddress( numA );</p>\r\n\r\n<p>&nbsp; cout &lt;&lt; numA &lt;&lt; endl;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>說明:</p>\r\n\r\n<p>上圖的程式碼首先會印出一開始初始化的numA也就是0，接著利用call by address 傳入函式後用numB來接，再來將numB加上10後結束，回到main再次印出numA，此時會發現印出的並不是0而是10。</p>\r\n\r\n<p>call by address是將傳入參數的所在位置傳入，因此在此程式碼中的numA以及numB其實是同一個資料，也就是說這兩個變數中的數值在記憶體上其實是同一個位置的數值，只是用不同名稱來稱呼而已。</p>",
        "attach": null,
        "rcount": null,
        "rank": null,
        "hit": "32",
        "lang": "1"
    }
}