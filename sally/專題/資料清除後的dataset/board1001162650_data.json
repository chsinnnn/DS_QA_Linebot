[
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目:   答案: 先假設有一鏈結串列裡的值依序是10,20,30。宣告另一個鏈結串列來複製值。  若依序印出的值與初始相同代表複製成功",
        "output": "評論:題目沒有限制任何長度的鏈結串列，解答的程式碼就要能應付各種長度，包括0。"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 合法運算式若有三組括弧，可以有幾種不同的形式？例如()()()和(()())就是二種不同的形式。  答案: 共有五種!  分別是  括弧裡面沒有括弧了 ()()() 一種  括弧裡面還有括弧 ( () () )﹐( () ) ()﹐() ( () ) 三種  括弧裡面的括弧裡面還有括弧( ( () ) ) 一種",
        "output": "評論:講得真好！ 評論:講得真詳細!"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 合法運算式若有三組括弧，可以有幾種不同的形式？例如()()()和(()())就是二種不同的形式。  答案: 總共有五種不同形式  1.()()()   2.((()))   3.(())()  4.()(())  5.(()())",
        "output": "評論:簡單明瞭！"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 合法運算式若有三組括弧，可以有幾種不同的形式？例如()()()和(()())就是二種不同的形式。  答案: 一層括弧 ()()()  二層括弧 ( () () )、( () ) ()、() ( () )  三層括弧( ( () ) )  總共5組",
        "output": "評論:同樣的問題如果有四組括弧呢？是否有通用的規則可以推算？"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 寫C++程式碼說明傳參考呼叫call by reference。  答案: 以下是我自己寫得程式範例，解釋在程式的下方    Call by reference是 C++才有的，call by reference 和 call by address的差別主要在於後者的指標它的內容為指向的位置，所以他本身仍然有記憶體位置但是前者是不會有的。因此參數在被函式呼叫之後，主程式的值會受到函式的影響，以及函式和主程式所使用的參數的記憶體位置是相同的。",
        "output": "評論:OK"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 合法運算式若有三組括弧，可以有幾種不同的形式？例如()()()和(()())就是二種不同的形式。  答案: 合法的形式有5種，    單層 : ()()()    雙層 : (())()、()(())、(()())    三層 : ((()))  不合法的情況有15種，會出現括號不成對的情況。  僅一個成對 : ()))((、))((()、))()((、))(()(、)())((  兩個成對 :    單層 : ())(()、())()(、)()(()、)()()(、()())(、)(()()    雙層 : )(())(、(()))(、)((())  都不成對 :  )))(((",
        "output": "評論:太厲害了吧!! 評論:Great!"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 寫C++程式碼說明如何複製一整個鏈結串列linked list到另一個變數。  答案: ",
        "output": "評論:好詳細，讚！ 評論:好清楚！真棒"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 寫C++程式碼說明如何複製一整個鏈結串列linked list到另一個變數。  答案: 以Linkedlist裡只有一個num值為例進行複製  以linklist A 複製到 linklist B 並印出檢查，兩者的輸出相同，即表示複製成功",
        "output": "評論:要設法避免連續二次鏈結以上如 head-&gt;next-&gt;next 形式的程式碼，程式可讀性差、常因illeagal access出錯、而且不易除錯。"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 寫C++程式碼說明傳參考呼叫call by reference。  答案: 以下為程式碼  call by reference: 把所要引用的位置複製給function的參數，兩者的地址是相同的，因此對function裡的x的改變其實就是對main中的x的改變，因此function的執行會影響到main裡面的數值。  以下是執行結果，在呼叫function之後，main的值會受到影響，但main和function所使用的參數的記憶體位置是相同的。",
        "output": "評論:講得真好！！"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 合法運算式若有三組括弧，可以有幾種不同的形式？例如()()()和(()())就是二種不同的形式。  答案: 總共有三種類型  ()()() 單一的括弧  ((())) 三層的括弧  (())(), ()(()), (()()) 兩層的括弧  總共五種  若想要再知道3組以上的括弧有幾種形式，可透過backtracking的方式寫出一支程式找出其合法的形式。",
        "output": "評論:讚! 評論:透過backtracking的方式寫出一支程式找出其合法的形式。   可否直接描述？ 評論:講的很好！ 評論:講得真好 還有利用到上課影片的內容"
    },
    {
        "instruction": "請根據以下問題的回答作出評論，並判斷回答是否正確",
        "input": "題目: 寫C++程式碼說明傳參考呼叫call by reference。  答案: call by reference : 呼叫function以後主程式的值會被改變，且記憶體位置相同。  call by value : 主副程式的變數記憶體位置不同，且呼叫function後不影響原值。  call by address : 呼叫function以後主程式的值會被改變，但function中變數的記憶體位置仍不同。",
        "output": "評論:講解得很清楚，還跟之前的問題做比較，讚讚 評論:OK"
    }
]